{
    "type": "object",
    "properties": {
        "name": {
            "required": true,
            "type": "string"
        },
        "updateMask": {
            "type": "string"
        },
        "alt": {
            "type": "string",
            "enum": [
                "json",
                "media",
                "proto"
            ],
            "default": "json"
        },
        "callback": {
            "type": "string"
        },
        "fields": {
            "type": "string"
        },
        "key": {
            "type": "string"
        },
        "oauth_token": {
            "type": "string"
        },
        "prettyPrint": {
            "type": "boolean",
            "default": true
        },
        "quotaUser": {
            "type": "string"
        },
        "uploadType": {
            "type": "string"
        },
        "upload_protocol": {
            "type": "string"
        },
        "requestBody": {
            "description": "An `AccessLevel` is a label that can be applied to requests to GCP services,\nalong with a list of requirements necessary for the label to be applied.",
            "properties": {
                "basic": {
                    "description": "A `BasicLevel` composed of `Conditions`.",
                    "properties": {
                        "combiningFunction": {
                            "description": "How the `conditions` list should be combined to determine if a request is\ngranted this `AccessLevel`. If AND is used, each `Condition` in\n`conditions` must be satisfied for the `AccessLevel` to be applied. If OR\nis used, at least one `Condition` in `conditions` must be satisfied for the\n`AccessLevel` to be applied. Default behavior is AND.",
                            "enum": [
                                "AND",
                                "OR"
                            ],
                            "type": "string"
                        },
                        "conditions": {
                            "description": "Required. A list of requirements for the `AccessLevel` to be granted.",
                            "items": {
                                "description": "A condition necessary for an `AccessLevel` to be granted. The Condition is an\nAND over its fields. So a Condition is true if: 1) the request IP is from one\nof the listed subnetworks AND 2) the originating device complies with the\nlisted device policy AND 3) all listed access levels are granted AND 4) the\nrequest was sent at a time allowed by the DateTimeRestriction.",
                                "properties": {
                                    "devicePolicy": {
                                        "description": "Device specific restrictions, all restrictions must hold for the\nCondition to be true. If not specified, all devices are allowed.",
                                        "properties": {
                                            "allowedDeviceManagementLevels": {
                                                "description": "Allowed device management levels, an empty list allows all management\nlevels.",
                                                "items": {
                                                    "enum": [
                                                        "MANAGEMENT_UNSPECIFIED",
                                                        "NONE",
                                                        "BASIC",
                                                        "COMPLETE"
                                                    ],
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "allowedEncryptionStatuses": {
                                                "description": "Allowed encryptions statuses, an empty list allows all statuses.",
                                                "items": {
                                                    "enum": [
                                                        "ENCRYPTION_UNSPECIFIED",
                                                        "ENCRYPTION_UNSUPPORTED",
                                                        "UNENCRYPTED",
                                                        "ENCRYPTED"
                                                    ],
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "osConstraints": {
                                                "description": "Allowed OS versions, an empty list allows all types and all versions.",
                                                "items": {
                                                    "description": "A restriction on the OS type and version of devices making requests.",
                                                    "properties": {
                                                        "minimumVersion": {
                                                            "description": "The minimum allowed OS version. If not set, any version of this OS\nsatisfies the constraint. Format: `\"major.minor.patch\"`.\nExamples: `\"10.5.301\"`, `\"9.2.1\"`.",
                                                            "type": "string"
                                                        },
                                                        "osType": {
                                                            "description": "Required. The allowed OS type.",
                                                            "enum": [
                                                                "OS_UNSPECIFIED",
                                                                "DESKTOP_MAC",
                                                                "DESKTOP_WINDOWS",
                                                                "DESKTOP_LINUX",
                                                                "DESKTOP_CHROME_OS"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "requireVerifiedChromeOs": {
                                                            "description": "Only allows requests from devices with a verified Chrome OS.\nVerifications includes requirements that the device is enterprise-managed,\nconformant to Dasher domain policies, and the caller has permission to call\nthe API targeted by the request.",
                                                            "type": "boolean"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "requireAdminApproval": {
                                                "description": "Whether the device needs to be approved by the customer admin.",
                                                "type": "boolean"
                                            },
                                            "requireCorpOwned": {
                                                "description": "Whether the device needs to be corp owned.",
                                                "type": "boolean"
                                            },
                                            "requireScreenlock": {
                                                "description": "Whether or not screenlock is required for the DevicePolicy to be true.\nDefaults to `false`.",
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "ipSubnetworks": {
                                        "description": "CIDR block IP subnetwork specification. May be IPv4 or IPv6. Note that for\na CIDR IP address block, the specified IP address portion must be properly\ntruncated (i.e. all the host bits must be zero) or the input is considered\nmalformed. For example, \"192.0.2.0/24\" is accepted but \"192.0.2.1/24\" is\nnot. Similarly, for IPv6, \"2001:db8::/32\" is accepted whereas\n\"2001:db8::1/32\" is not. The originating IP of a request must be in one of\nthe listed subnets in order for this Condition to be true. If empty, all IP\naddresses are allowed.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "members": {
                                        "description": "The request must be made by one of the provided user or service\naccounts. Groups are not supported.\nSyntax:\n`user:{emailid}`\n`serviceAccount:{emailid}`\nIf not specified, a request may come from any user.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "negate": {
                                        "description": "Whether to negate the Condition. If true, the Condition becomes a NAND over\nits non-empty fields, each field must be false for the Condition overall to\nbe satisfied. Defaults to false.",
                                        "type": "boolean"
                                    },
                                    "regions": {
                                        "description": "The request must originate from one of the provided countries/regions.\nMust be valid ISO 3166-1 alpha-2 codes.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "requiredAccessLevels": {
                                        "description": "A list of other access levels defined in the same `Policy`, referenced by\nresource name. Referencing an `AccessLevel` which does not exist is an\nerror. All access levels listed must be granted for the Condition\nto be true. Example:\n\"`accessPolicies/MY_POLICY/accessLevels/LEVEL_NAME\"`",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "createTime": {
                    "description": "Output only. Time the `AccessLevel` was created in UTC.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "description": {
                    "description": "Description of the `AccessLevel` and its use. Does not affect behavior.",
                    "type": "string"
                },
                "name": {
                    "description": "Required. Resource name for the Access Level. The `short_name` component\nmust begin with a letter and only include alphanumeric and '_'. Format:\n`accessPolicies/{policy_id}/accessLevels/{short_name}`",
                    "type": "string"
                },
                "title": {
                    "description": "Human readable title. Must be unique within the Policy.",
                    "type": "string"
                },
                "updateTime": {
                    "description": "Output only. Time the `AccessLevel` was updated in UTC.",
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "type": "object"
        }
    }
}